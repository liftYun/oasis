server:
  port: ${SERVER_PORT}
  forward-headers-strategy: framework
swagger:
  uri: "/"

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  # 일반 캐시용 Redis
  #  data:
  #    redis:
  #      host: ${REDIS_HOST}
  #      port: ${REDIS_PORT}
  #      password: ${REDIS_PASSWORD}
  #      timeout: 20000  # 연결 타임아웃 (ms)
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  jwt:
    secret: ${JWT_SECRET_KEY}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}      # 환경변수 또는 실제 값
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "${app.backend-base-url}/api/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            issuer-uri: https://accounts.google.com

jwt:
  access:
    expired-ms: 600000
  #    expired-ms: 6048000000    # for test
  refresh:
    expired-ms: 604800000 # 7?
logging:
  level:
    org.hibernate.SQL: debug #?? SQL ??? ??? ??
    org.hibernate.type: trace #SQL ??? ????? ???? ?? ??

app:
  translate:
    timeout-ms: 3000
  front-base-url: ${FRONT_BASE_URL}
  backend-base-url: ${BACK_BASE_URL}
  #  backend-base-url: http://localhost:8080 # localTest
  domain: .stay-oasis.kr
#  domain: localhost
papago:
  base-url: https://papago.apigw.ntruss.com
  client-id: ${PAPAGO_CLIENT_ID}
  client-secret: ${PAPAGO_CLIENT_SECRET}

cloud:
  aws:
    region: ${S3_REGION}          # 서울 리전
    s3:
      bucket: ${S3_BUCKET}      # 실제 버킷명
      prefix:
        stay-img: ${S3_STAY_IMG_PATH}
        certificate: ${S3_CERTIFICATE_PATH}
        profile-img: ${S3_PROFILE_IMG_PATH}

      credentials:
        access-key: ${S3_ACCESS_KEY_ID}
        secret-key: ${S3_SECRET_ACCESS_KEY}
    sqs:
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      queue:
        stay-translation-url: ${SQS_TRANS_STAY}
        review-translation-url: ${SQS_TRANS_REVIEW}
        review-summary-url: ${SQS_SUMMARY_REVIEW}

openai:
  secret-key: ${OPENAI_SECRET_KEY}
  chat-url: https://gms.ssafy.io/gmsapi/api.openai.com/v1/chat/completions
  chat-model: gpt-4.1-mini

circle:
  base-url: ${CIRCLE_BASE_URL}
  api-key: ${CIRCLE_API_KEY}
  default-fee-level: MEDIUM


contract:
  address: ${CONTRACT_ADDRESS}

usdc:
  address: ${USDC_ADDRESS}